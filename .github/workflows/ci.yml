name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379

    env:
      NODE_ENV: production
      DIALECT: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: test_db
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      JWT_ACCESS_TOKEN_EXPIRE: 1h
      JWT_REFRESH_TOKEN_EXPIRE: 7d
      JWT_ACCESS_TOKEN_SECRET: very-long-secret-key-khemu
      JWT_REFRESH_TOKEN_SECRET: very-long-secret-key-khemu-refresh
      REDIS_URL: redis://localhost:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install --include=dev

      - name: Build project
        run: npm run build

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for postgres..."
            sleep 2
          done

      - name: Run migrations (if applicable)
        run: npm run db:migrate

      - name: Start server in background
        run: |
          nohup npm run start &> app.log &
          sleep 5

      - name: Run tests
        run: npm run test
